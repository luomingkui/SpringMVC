<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:context="http://www.springframework.org/schema/context"
     xmlns:mvc="http://www.springframework.org/schema/mvc"
     xmlns:util="http://www.springframework.org/schema/util"
     xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<!-- 设置扫描组件的包 -->
	<context:component-scan base-package="com.atguigu.springmvc.handlers"/>

	<!-- 视图解析器
		采用转发方式跳转视图。
		prefix + returnValue + suffix =>>   /WEB-INF/views/  +  success + .jsp  ==  /WEB-INF/views/success.jsp
	 -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	 <!--在springMVC-servlet.xml中配置mvc:default-servlet-handler 后，
		 会在Spring MVC上下文中定义一个org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler，
		 它会像一个检查员，对进入DispatcherServlet的URL进行筛查，如果发现是静态资源的请求，就将该请求转由Web应用服务器默认的Servlet处理，
	 	如果不是静态资源的请求，才由DispatcherServlet继续处理
	 -->
     <mvc:default-servlet-handler />
     
     <!-- 配置 <mvc:default-servlet-handler/>解决静态资源访问问题，
     		但是，原来的映射路径都找不到了，这个配置就是解决这个问题的
     -->
     <mvc:annotation-driven />
	
	

</beans>
